// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nfs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "nfs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace nfs {

namespace {

const ::google::protobuf::Descriptor* FileHandle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileHandle_reflection_ = NULL;
const ::google::protobuf::Descriptor* Attribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Attribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* LookupArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LookupArgs_reflection_ = NULL;
const ::google::protobuf::Descriptor* LookupReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LookupReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateArgs_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveArgs_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReadArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadArgs_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReadReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* WriteArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WriteArgs_reflection_ = NULL;
const ::google::protobuf::Descriptor* WriteReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WriteReturn_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_nfs_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_nfs_2eproto() {
  protobuf_AddDesc_nfs_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "nfs.proto");
  GOOGLE_CHECK(file != NULL);
  FileHandle_descriptor_ = file->message_type(0);
  static const int FileHandle_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileHandle, inode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileHandle, fsnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileHandle, genum_),
  };
  FileHandle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FileHandle_descriptor_,
      FileHandle::default_instance_,
      FileHandle_offsets_,
      -1,
      -1,
      -1,
      sizeof(FileHandle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileHandle, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileHandle, _is_default_instance_));
  Attribute_descriptor_ = file->message_type(1);
  static const int Attribute_offsets_[1] = {
  };
  Attribute_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Attribute_descriptor_,
      Attribute::default_instance_,
      Attribute_offsets_,
      -1,
      -1,
      -1,
      sizeof(Attribute),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attribute, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attribute, _is_default_instance_));
  LookupArgs_descriptor_ = file->message_type(2);
  static const int LookupArgs_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupArgs, dirfh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupArgs, name_),
  };
  LookupArgs_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LookupArgs_descriptor_,
      LookupArgs::default_instance_,
      LookupArgs_offsets_,
      -1,
      -1,
      -1,
      sizeof(LookupArgs),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupArgs, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupArgs, _is_default_instance_));
  LookupReturn_descriptor_ = file->message_type(3);
  static const int LookupReturn_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupReturn, fh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupReturn, attr_),
  };
  LookupReturn_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LookupReturn_descriptor_,
      LookupReturn::default_instance_,
      LookupReturn_offsets_,
      -1,
      -1,
      -1,
      sizeof(LookupReturn),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupReturn, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupReturn, _is_default_instance_));
  CreateArgs_descriptor_ = file->message_type(4);
  static const int CreateArgs_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateArgs, dirfh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateArgs, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateArgs, attr_),
  };
  CreateArgs_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateArgs_descriptor_,
      CreateArgs::default_instance_,
      CreateArgs_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateArgs),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateArgs, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateArgs, _is_default_instance_));
  CreateReturn_descriptor_ = file->message_type(5);
  static const int CreateReturn_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateReturn, newfh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateReturn, attr_),
  };
  CreateReturn_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateReturn_descriptor_,
      CreateReturn::default_instance_,
      CreateReturn_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateReturn),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateReturn, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateReturn, _is_default_instance_));
  RemoveArgs_descriptor_ = file->message_type(6);
  static const int RemoveArgs_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveArgs, dirfh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveArgs, name_),
  };
  RemoveArgs_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RemoveArgs_descriptor_,
      RemoveArgs::default_instance_,
      RemoveArgs_offsets_,
      -1,
      -1,
      -1,
      sizeof(RemoveArgs),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveArgs, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveArgs, _is_default_instance_));
  RemoveReturn_descriptor_ = file->message_type(7);
  static const int RemoveReturn_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveReturn, status_),
  };
  RemoveReturn_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RemoveReturn_descriptor_,
      RemoveReturn::default_instance_,
      RemoveReturn_offsets_,
      -1,
      -1,
      -1,
      sizeof(RemoveReturn),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveReturn, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveReturn, _is_default_instance_));
  ReadArgs_descriptor_ = file->message_type(8);
  static const int ReadArgs_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadArgs, fh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadArgs, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadArgs, count_),
  };
  ReadArgs_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadArgs_descriptor_,
      ReadArgs::default_instance_,
      ReadArgs_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadArgs),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadArgs, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadArgs, _is_default_instance_));
  ReadReturn_descriptor_ = file->message_type(9);
  static const int ReadReturn_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadReturn, attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadReturn, data_),
  };
  ReadReturn_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadReturn_descriptor_,
      ReadReturn::default_instance_,
      ReadReturn_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadReturn),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadReturn, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadReturn, _is_default_instance_));
  WriteArgs_descriptor_ = file->message_type(10);
  static const int WriteArgs_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteArgs, fh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteArgs, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteArgs, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteArgs, data_),
  };
  WriteArgs_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WriteArgs_descriptor_,
      WriteArgs::default_instance_,
      WriteArgs_offsets_,
      -1,
      -1,
      -1,
      sizeof(WriteArgs),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteArgs, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteArgs, _is_default_instance_));
  WriteReturn_descriptor_ = file->message_type(11);
  static const int WriteReturn_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteReturn, attr_),
  };
  WriteReturn_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WriteReturn_descriptor_,
      WriteReturn::default_instance_,
      WriteReturn_offsets_,
      -1,
      -1,
      -1,
      sizeof(WriteReturn),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteReturn, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteReturn, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_nfs_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FileHandle_descriptor_, &FileHandle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Attribute_descriptor_, &Attribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LookupArgs_descriptor_, &LookupArgs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LookupReturn_descriptor_, &LookupReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateArgs_descriptor_, &CreateArgs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateReturn_descriptor_, &CreateReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RemoveArgs_descriptor_, &RemoveArgs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RemoveReturn_descriptor_, &RemoveReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadArgs_descriptor_, &ReadArgs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadReturn_descriptor_, &ReadReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriteArgs_descriptor_, &WriteArgs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriteReturn_descriptor_, &WriteReturn::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_nfs_2eproto() {
  delete FileHandle::default_instance_;
  delete FileHandle_reflection_;
  delete Attribute::default_instance_;
  delete Attribute_reflection_;
  delete LookupArgs::default_instance_;
  delete LookupArgs_reflection_;
  delete LookupReturn::default_instance_;
  delete LookupReturn_reflection_;
  delete CreateArgs::default_instance_;
  delete CreateArgs_reflection_;
  delete CreateReturn::default_instance_;
  delete CreateReturn_reflection_;
  delete RemoveArgs::default_instance_;
  delete RemoveArgs_reflection_;
  delete RemoveReturn::default_instance_;
  delete RemoveReturn_reflection_;
  delete ReadArgs::default_instance_;
  delete ReadArgs_reflection_;
  delete ReadReturn::default_instance_;
  delete ReadReturn_reflection_;
  delete WriteArgs::default_instance_;
  delete WriteArgs_reflection_;
  delete WriteReturn::default_instance_;
  delete WriteReturn_reflection_;
}

void protobuf_AddDesc_nfs_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_nfs_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tnfs.proto\022\003nfs\"9\n\nFileHandle\022\r\n\005inode\030"
    "\001 \001(\005\022\r\n\005fsnum\030\002 \001(\005\022\r\n\005genum\030\003 \001(\005\"\013\n\tA"
    "ttribute\":\n\nLookupArgs\022\036\n\005dirfh\030\001 \001(\0132\017."
    "nfs.FileHandle\022\014\n\004name\030\002 \001(\t\"I\n\014LookupRe"
    "turn\022\033\n\002fh\030\001 \001(\0132\017.nfs.FileHandle\022\034\n\004att"
    "r\030\002 \001(\0132\016.nfs.Attribute\"X\n\nCreateArgs\022\036\n"
    "\005dirfh\030\001 \001(\0132\017.nfs.FileHandle\022\014\n\004name\030\002 "
    "\001(\t\022\034\n\004attr\030\003 \001(\0132\016.nfs.Attribute\"L\n\014Cre"
    "ateReturn\022\036\n\005newfh\030\001 \001(\0132\017.nfs.FileHandl"
    "e\022\034\n\004attr\030\002 \001(\0132\016.nfs.Attribute\":\n\nRemov"
    "eArgs\022\036\n\005dirfh\030\001 \001(\0132\017.nfs.FileHandle\022\014\n"
    "\004name\030\002 \001(\t\"\036\n\014RemoveReturn\022\016\n\006status\030\001 "
    "\001(\005\"F\n\010ReadArgs\022\033\n\002fh\030\001 \001(\0132\017.nfs.FileHa"
    "ndle\022\016\n\006offset\030\002 \001(\005\022\r\n\005count\030\003 \001(\005\"8\n\nR"
    "eadReturn\022\034\n\004attr\030\001 \001(\0132\016.nfs.Attribute\022"
    "\014\n\004data\030\002 \001(\014\"U\n\tWriteArgs\022\033\n\002fh\030\001 \001(\0132\017"
    ".nfs.FileHandle\022\016\n\006offset\030\002 \001(\005\022\r\n\005count"
    "\030\003 \001(\005\022\014\n\004data\030\004 \001(\014\"+\n\013WriteReturn\022\034\n\004a"
    "ttr\030\001 \001(\0132\016.nfs.Attribute2\354\001\n\003NFS\022.\n\006loo"
    "kup\022\017.nfs.LookupArgs\032\021.nfs.LookupReturn\""
    "\000\022.\n\006create\022\017.nfs.CreateArgs\032\021.nfs.Creat"
    "eReturn\"\000\022.\n\006remove\022\017.nfs.RemoveArgs\032\021.n"
    "fs.RemoveReturn\"\000\022(\n\004read\022\r.nfs.ReadArgs"
    "\032\017.nfs.ReadReturn\"\000\022+\n\005write\022\016.nfs.Write"
    "Args\032\020.nfs.WriteReturn\"\000b\006proto3", 992);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nfs.proto", &protobuf_RegisterTypes);
  FileHandle::default_instance_ = new FileHandle();
  Attribute::default_instance_ = new Attribute();
  LookupArgs::default_instance_ = new LookupArgs();
  LookupReturn::default_instance_ = new LookupReturn();
  CreateArgs::default_instance_ = new CreateArgs();
  CreateReturn::default_instance_ = new CreateReturn();
  RemoveArgs::default_instance_ = new RemoveArgs();
  RemoveReturn::default_instance_ = new RemoveReturn();
  ReadArgs::default_instance_ = new ReadArgs();
  ReadReturn::default_instance_ = new ReadReturn();
  WriteArgs::default_instance_ = new WriteArgs();
  WriteReturn::default_instance_ = new WriteReturn();
  FileHandle::default_instance_->InitAsDefaultInstance();
  Attribute::default_instance_->InitAsDefaultInstance();
  LookupArgs::default_instance_->InitAsDefaultInstance();
  LookupReturn::default_instance_->InitAsDefaultInstance();
  CreateArgs::default_instance_->InitAsDefaultInstance();
  CreateReturn::default_instance_->InitAsDefaultInstance();
  RemoveArgs::default_instance_->InitAsDefaultInstance();
  RemoveReturn::default_instance_->InitAsDefaultInstance();
  ReadArgs::default_instance_->InitAsDefaultInstance();
  ReadReturn::default_instance_->InitAsDefaultInstance();
  WriteArgs::default_instance_->InitAsDefaultInstance();
  WriteReturn::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_nfs_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_nfs_2eproto {
  StaticDescriptorInitializer_nfs_2eproto() {
    protobuf_AddDesc_nfs_2eproto();
  }
} static_descriptor_initializer_nfs_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileHandle::kInodeFieldNumber;
const int FileHandle::kFsnumFieldNumber;
const int FileHandle::kGenumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileHandle::FileHandle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfs.FileHandle)
}

void FileHandle::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FileHandle::FileHandle(const FileHandle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfs.FileHandle)
}

void FileHandle::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  inode_ = 0;
  fsnum_ = 0;
  genum_ = 0;
}

FileHandle::~FileHandle() {
  // @@protoc_insertion_point(destructor:nfs.FileHandle)
  SharedDtor();
}

void FileHandle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileHandle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileHandle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileHandle_descriptor_;
}

const FileHandle& FileHandle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfs_2eproto();
  return *default_instance_;
}

FileHandle* FileHandle::default_instance_ = NULL;

FileHandle* FileHandle::New(::google::protobuf::Arena* arena) const {
  FileHandle* n = new FileHandle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileHandle::Clear() {
// @@protoc_insertion_point(message_clear_start:nfs.FileHandle)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FileHandle, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FileHandle*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(inode_, genum_);

#undef ZR_HELPER_
#undef ZR_

}

bool FileHandle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfs.FileHandle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 inode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_fsnum;
        break;
      }

      // optional int32 fsnum = 2;
      case 2: {
        if (tag == 16) {
         parse_fsnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fsnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_genum;
        break;
      }

      // optional int32 genum = 3;
      case 3: {
        if (tag == 24) {
         parse_genum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &genum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfs.FileHandle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfs.FileHandle)
  return false;
#undef DO_
}

void FileHandle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfs.FileHandle)
  // optional int32 inode = 1;
  if (this->inode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->inode(), output);
  }

  // optional int32 fsnum = 2;
  if (this->fsnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fsnum(), output);
  }

  // optional int32 genum = 3;
  if (this->genum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->genum(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfs.FileHandle)
}

::google::protobuf::uint8* FileHandle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfs.FileHandle)
  // optional int32 inode = 1;
  if (this->inode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->inode(), target);
  }

  // optional int32 fsnum = 2;
  if (this->fsnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fsnum(), target);
  }

  // optional int32 genum = 3;
  if (this->genum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->genum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfs.FileHandle)
  return target;
}

int FileHandle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfs.FileHandle)
  int total_size = 0;

  // optional int32 inode = 1;
  if (this->inode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->inode());
  }

  // optional int32 fsnum = 2;
  if (this->fsnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fsnum());
  }

  // optional int32 genum = 3;
  if (this->genum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->genum());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileHandle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfs.FileHandle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FileHandle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FileHandle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfs.FileHandle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfs.FileHandle)
    MergeFrom(*source);
  }
}

void FileHandle::MergeFrom(const FileHandle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfs.FileHandle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.inode() != 0) {
    set_inode(from.inode());
  }
  if (from.fsnum() != 0) {
    set_fsnum(from.fsnum());
  }
  if (from.genum() != 0) {
    set_genum(from.genum());
  }
}

void FileHandle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfs.FileHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileHandle::CopyFrom(const FileHandle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfs.FileHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileHandle::IsInitialized() const {

  return true;
}

void FileHandle::Swap(FileHandle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileHandle::InternalSwap(FileHandle* other) {
  std::swap(inode_, other->inode_);
  std::swap(fsnum_, other->fsnum_);
  std::swap(genum_, other->genum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileHandle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileHandle_descriptor_;
  metadata.reflection = FileHandle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileHandle

// optional int32 inode = 1;
void FileHandle::clear_inode() {
  inode_ = 0;
}
 ::google::protobuf::int32 FileHandle::inode() const {
  // @@protoc_insertion_point(field_get:nfs.FileHandle.inode)
  return inode_;
}
 void FileHandle::set_inode(::google::protobuf::int32 value) {
  
  inode_ = value;
  // @@protoc_insertion_point(field_set:nfs.FileHandle.inode)
}

// optional int32 fsnum = 2;
void FileHandle::clear_fsnum() {
  fsnum_ = 0;
}
 ::google::protobuf::int32 FileHandle::fsnum() const {
  // @@protoc_insertion_point(field_get:nfs.FileHandle.fsnum)
  return fsnum_;
}
 void FileHandle::set_fsnum(::google::protobuf::int32 value) {
  
  fsnum_ = value;
  // @@protoc_insertion_point(field_set:nfs.FileHandle.fsnum)
}

// optional int32 genum = 3;
void FileHandle::clear_genum() {
  genum_ = 0;
}
 ::google::protobuf::int32 FileHandle::genum() const {
  // @@protoc_insertion_point(field_get:nfs.FileHandle.genum)
  return genum_;
}
 void FileHandle::set_genum(::google::protobuf::int32 value) {
  
  genum_ = value;
  // @@protoc_insertion_point(field_set:nfs.FileHandle.genum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Attribute::Attribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfs.Attribute)
}

void Attribute::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Attribute::Attribute(const Attribute& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfs.Attribute)
}

void Attribute::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Attribute::~Attribute() {
  // @@protoc_insertion_point(destructor:nfs.Attribute)
  SharedDtor();
}

void Attribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Attribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Attribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Attribute_descriptor_;
}

const Attribute& Attribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfs_2eproto();
  return *default_instance_;
}

Attribute* Attribute::default_instance_ = NULL;

Attribute* Attribute::New(::google::protobuf::Arena* arena) const {
  Attribute* n = new Attribute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:nfs.Attribute)
}

bool Attribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfs.Attribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:nfs.Attribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfs.Attribute)
  return false;
#undef DO_
}

void Attribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfs.Attribute)
  // @@protoc_insertion_point(serialize_end:nfs.Attribute)
}

::google::protobuf::uint8* Attribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfs.Attribute)
  // @@protoc_insertion_point(serialize_to_array_end:nfs.Attribute)
  return target;
}

int Attribute::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfs.Attribute)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Attribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfs.Attribute)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Attribute* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Attribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfs.Attribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfs.Attribute)
    MergeFrom(*source);
  }
}

void Attribute::MergeFrom(const Attribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfs.Attribute)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void Attribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfs.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Attribute::CopyFrom(const Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfs.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attribute::IsInitialized() const {

  return true;
}

void Attribute::Swap(Attribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Attribute::InternalSwap(Attribute* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Attribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Attribute_descriptor_;
  metadata.reflection = Attribute_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Attribute

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LookupArgs::kDirfhFieldNumber;
const int LookupArgs::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LookupArgs::LookupArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfs.LookupArgs)
}

void LookupArgs::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  dirfh_ = const_cast< ::nfs::FileHandle*>(&::nfs::FileHandle::default_instance());
}

LookupArgs::LookupArgs(const LookupArgs& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfs.LookupArgs)
}

void LookupArgs::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dirfh_ = NULL;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LookupArgs::~LookupArgs() {
  // @@protoc_insertion_point(destructor:nfs.LookupArgs)
  SharedDtor();
}

void LookupArgs::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete dirfh_;
  }
}

void LookupArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LookupArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LookupArgs_descriptor_;
}

const LookupArgs& LookupArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfs_2eproto();
  return *default_instance_;
}

LookupArgs* LookupArgs::default_instance_ = NULL;

LookupArgs* LookupArgs::New(::google::protobuf::Arena* arena) const {
  LookupArgs* n = new LookupArgs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LookupArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:nfs.LookupArgs)
  if (GetArenaNoVirtual() == NULL && dirfh_ != NULL) delete dirfh_;
  dirfh_ = NULL;
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LookupArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfs.LookupArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .nfs.FileHandle dirfh = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dirfh()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfs.LookupArgs.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfs.LookupArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfs.LookupArgs)
  return false;
#undef DO_
}

void LookupArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfs.LookupArgs)
  // optional .nfs.FileHandle dirfh = 1;
  if (this->has_dirfh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->dirfh_, output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfs.LookupArgs.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfs.LookupArgs)
}

::google::protobuf::uint8* LookupArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfs.LookupArgs)
  // optional .nfs.FileHandle dirfh = 1;
  if (this->has_dirfh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->dirfh_, false, target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfs.LookupArgs.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfs.LookupArgs)
  return target;
}

int LookupArgs::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfs.LookupArgs)
  int total_size = 0;

  // optional .nfs.FileHandle dirfh = 1;
  if (this->has_dirfh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dirfh_);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LookupArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfs.LookupArgs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LookupArgs* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LookupArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfs.LookupArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfs.LookupArgs)
    MergeFrom(*source);
  }
}

void LookupArgs::MergeFrom(const LookupArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfs.LookupArgs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_dirfh()) {
    mutable_dirfh()->::nfs::FileHandle::MergeFrom(from.dirfh());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void LookupArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfs.LookupArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LookupArgs::CopyFrom(const LookupArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfs.LookupArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookupArgs::IsInitialized() const {

  return true;
}

void LookupArgs::Swap(LookupArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LookupArgs::InternalSwap(LookupArgs* other) {
  std::swap(dirfh_, other->dirfh_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LookupArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LookupArgs_descriptor_;
  metadata.reflection = LookupArgs_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LookupArgs

// optional .nfs.FileHandle dirfh = 1;
bool LookupArgs::has_dirfh() const {
  return !_is_default_instance_ && dirfh_ != NULL;
}
void LookupArgs::clear_dirfh() {
  if (GetArenaNoVirtual() == NULL && dirfh_ != NULL) delete dirfh_;
  dirfh_ = NULL;
}
const ::nfs::FileHandle& LookupArgs::dirfh() const {
  // @@protoc_insertion_point(field_get:nfs.LookupArgs.dirfh)
  return dirfh_ != NULL ? *dirfh_ : *default_instance_->dirfh_;
}
::nfs::FileHandle* LookupArgs::mutable_dirfh() {
  
  if (dirfh_ == NULL) {
    dirfh_ = new ::nfs::FileHandle;
  }
  // @@protoc_insertion_point(field_mutable:nfs.LookupArgs.dirfh)
  return dirfh_;
}
::nfs::FileHandle* LookupArgs::release_dirfh() {
  // @@protoc_insertion_point(field_release:nfs.LookupArgs.dirfh)
  
  ::nfs::FileHandle* temp = dirfh_;
  dirfh_ = NULL;
  return temp;
}
void LookupArgs::set_allocated_dirfh(::nfs::FileHandle* dirfh) {
  delete dirfh_;
  dirfh_ = dirfh;
  if (dirfh) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nfs.LookupArgs.dirfh)
}

// optional string name = 2;
void LookupArgs::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LookupArgs::name() const {
  // @@protoc_insertion_point(field_get:nfs.LookupArgs.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LookupArgs::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfs.LookupArgs.name)
}
 void LookupArgs::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfs.LookupArgs.name)
}
 void LookupArgs::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfs.LookupArgs.name)
}
 ::std::string* LookupArgs::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:nfs.LookupArgs.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LookupArgs::release_name() {
  // @@protoc_insertion_point(field_release:nfs.LookupArgs.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LookupArgs::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:nfs.LookupArgs.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LookupReturn::kFhFieldNumber;
const int LookupReturn::kAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LookupReturn::LookupReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfs.LookupReturn)
}

void LookupReturn::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  fh_ = const_cast< ::nfs::FileHandle*>(&::nfs::FileHandle::default_instance());
  attr_ = const_cast< ::nfs::Attribute*>(&::nfs::Attribute::default_instance());
}

LookupReturn::LookupReturn(const LookupReturn& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfs.LookupReturn)
}

void LookupReturn::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  fh_ = NULL;
  attr_ = NULL;
}

LookupReturn::~LookupReturn() {
  // @@protoc_insertion_point(destructor:nfs.LookupReturn)
  SharedDtor();
}

void LookupReturn::SharedDtor() {
  if (this != default_instance_) {
    delete fh_;
    delete attr_;
  }
}

void LookupReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LookupReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LookupReturn_descriptor_;
}

const LookupReturn& LookupReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfs_2eproto();
  return *default_instance_;
}

LookupReturn* LookupReturn::default_instance_ = NULL;

LookupReturn* LookupReturn::New(::google::protobuf::Arena* arena) const {
  LookupReturn* n = new LookupReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LookupReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:nfs.LookupReturn)
  if (GetArenaNoVirtual() == NULL && fh_ != NULL) delete fh_;
  fh_ = NULL;
  if (GetArenaNoVirtual() == NULL && attr_ != NULL) delete attr_;
  attr_ = NULL;
}

bool LookupReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfs.LookupReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .nfs.FileHandle fh = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fh()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        break;
      }

      // optional .nfs.Attribute attr = 2;
      case 2: {
        if (tag == 18) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfs.LookupReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfs.LookupReturn)
  return false;
#undef DO_
}

void LookupReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfs.LookupReturn)
  // optional .nfs.FileHandle fh = 1;
  if (this->has_fh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->fh_, output);
  }

  // optional .nfs.Attribute attr = 2;
  if (this->has_attr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->attr_, output);
  }

  // @@protoc_insertion_point(serialize_end:nfs.LookupReturn)
}

::google::protobuf::uint8* LookupReturn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfs.LookupReturn)
  // optional .nfs.FileHandle fh = 1;
  if (this->has_fh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->fh_, false, target);
  }

  // optional .nfs.Attribute attr = 2;
  if (this->has_attr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->attr_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfs.LookupReturn)
  return target;
}

int LookupReturn::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfs.LookupReturn)
  int total_size = 0;

  // optional .nfs.FileHandle fh = 1;
  if (this->has_fh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fh_);
  }

  // optional .nfs.Attribute attr = 2;
  if (this->has_attr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->attr_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LookupReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfs.LookupReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LookupReturn* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LookupReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfs.LookupReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfs.LookupReturn)
    MergeFrom(*source);
  }
}

void LookupReturn::MergeFrom(const LookupReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfs.LookupReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_fh()) {
    mutable_fh()->::nfs::FileHandle::MergeFrom(from.fh());
  }
  if (from.has_attr()) {
    mutable_attr()->::nfs::Attribute::MergeFrom(from.attr());
  }
}

void LookupReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfs.LookupReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LookupReturn::CopyFrom(const LookupReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfs.LookupReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookupReturn::IsInitialized() const {

  return true;
}

void LookupReturn::Swap(LookupReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LookupReturn::InternalSwap(LookupReturn* other) {
  std::swap(fh_, other->fh_);
  std::swap(attr_, other->attr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LookupReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LookupReturn_descriptor_;
  metadata.reflection = LookupReturn_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LookupReturn

// optional .nfs.FileHandle fh = 1;
bool LookupReturn::has_fh() const {
  return !_is_default_instance_ && fh_ != NULL;
}
void LookupReturn::clear_fh() {
  if (GetArenaNoVirtual() == NULL && fh_ != NULL) delete fh_;
  fh_ = NULL;
}
const ::nfs::FileHandle& LookupReturn::fh() const {
  // @@protoc_insertion_point(field_get:nfs.LookupReturn.fh)
  return fh_ != NULL ? *fh_ : *default_instance_->fh_;
}
::nfs::FileHandle* LookupReturn::mutable_fh() {
  
  if (fh_ == NULL) {
    fh_ = new ::nfs::FileHandle;
  }
  // @@protoc_insertion_point(field_mutable:nfs.LookupReturn.fh)
  return fh_;
}
::nfs::FileHandle* LookupReturn::release_fh() {
  // @@protoc_insertion_point(field_release:nfs.LookupReturn.fh)
  
  ::nfs::FileHandle* temp = fh_;
  fh_ = NULL;
  return temp;
}
void LookupReturn::set_allocated_fh(::nfs::FileHandle* fh) {
  delete fh_;
  fh_ = fh;
  if (fh) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nfs.LookupReturn.fh)
}

// optional .nfs.Attribute attr = 2;
bool LookupReturn::has_attr() const {
  return !_is_default_instance_ && attr_ != NULL;
}
void LookupReturn::clear_attr() {
  if (GetArenaNoVirtual() == NULL && attr_ != NULL) delete attr_;
  attr_ = NULL;
}
const ::nfs::Attribute& LookupReturn::attr() const {
  // @@protoc_insertion_point(field_get:nfs.LookupReturn.attr)
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
::nfs::Attribute* LookupReturn::mutable_attr() {
  
  if (attr_ == NULL) {
    attr_ = new ::nfs::Attribute;
  }
  // @@protoc_insertion_point(field_mutable:nfs.LookupReturn.attr)
  return attr_;
}
::nfs::Attribute* LookupReturn::release_attr() {
  // @@protoc_insertion_point(field_release:nfs.LookupReturn.attr)
  
  ::nfs::Attribute* temp = attr_;
  attr_ = NULL;
  return temp;
}
void LookupReturn::set_allocated_attr(::nfs::Attribute* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nfs.LookupReturn.attr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateArgs::kDirfhFieldNumber;
const int CreateArgs::kNameFieldNumber;
const int CreateArgs::kAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateArgs::CreateArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfs.CreateArgs)
}

void CreateArgs::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  dirfh_ = const_cast< ::nfs::FileHandle*>(&::nfs::FileHandle::default_instance());
  attr_ = const_cast< ::nfs::Attribute*>(&::nfs::Attribute::default_instance());
}

CreateArgs::CreateArgs(const CreateArgs& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfs.CreateArgs)
}

void CreateArgs::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dirfh_ = NULL;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr_ = NULL;
}

CreateArgs::~CreateArgs() {
  // @@protoc_insertion_point(destructor:nfs.CreateArgs)
  SharedDtor();
}

void CreateArgs::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete dirfh_;
    delete attr_;
  }
}

void CreateArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateArgs_descriptor_;
}

const CreateArgs& CreateArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfs_2eproto();
  return *default_instance_;
}

CreateArgs* CreateArgs::default_instance_ = NULL;

CreateArgs* CreateArgs::New(::google::protobuf::Arena* arena) const {
  CreateArgs* n = new CreateArgs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:nfs.CreateArgs)
  if (GetArenaNoVirtual() == NULL && dirfh_ != NULL) delete dirfh_;
  dirfh_ = NULL;
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && attr_ != NULL) delete attr_;
  attr_ = NULL;
}

bool CreateArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfs.CreateArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .nfs.FileHandle dirfh = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dirfh()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfs.CreateArgs.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_attr;
        break;
      }

      // optional .nfs.Attribute attr = 3;
      case 3: {
        if (tag == 26) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfs.CreateArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfs.CreateArgs)
  return false;
#undef DO_
}

void CreateArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfs.CreateArgs)
  // optional .nfs.FileHandle dirfh = 1;
  if (this->has_dirfh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->dirfh_, output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfs.CreateArgs.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .nfs.Attribute attr = 3;
  if (this->has_attr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->attr_, output);
  }

  // @@protoc_insertion_point(serialize_end:nfs.CreateArgs)
}

::google::protobuf::uint8* CreateArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfs.CreateArgs)
  // optional .nfs.FileHandle dirfh = 1;
  if (this->has_dirfh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->dirfh_, false, target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfs.CreateArgs.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .nfs.Attribute attr = 3;
  if (this->has_attr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->attr_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfs.CreateArgs)
  return target;
}

int CreateArgs::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfs.CreateArgs)
  int total_size = 0;

  // optional .nfs.FileHandle dirfh = 1;
  if (this->has_dirfh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dirfh_);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .nfs.Attribute attr = 3;
  if (this->has_attr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->attr_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfs.CreateArgs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateArgs* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfs.CreateArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfs.CreateArgs)
    MergeFrom(*source);
  }
}

void CreateArgs::MergeFrom(const CreateArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfs.CreateArgs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_dirfh()) {
    mutable_dirfh()->::nfs::FileHandle::MergeFrom(from.dirfh());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_attr()) {
    mutable_attr()->::nfs::Attribute::MergeFrom(from.attr());
  }
}

void CreateArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfs.CreateArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateArgs::CopyFrom(const CreateArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfs.CreateArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateArgs::IsInitialized() const {

  return true;
}

void CreateArgs::Swap(CreateArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateArgs::InternalSwap(CreateArgs* other) {
  std::swap(dirfh_, other->dirfh_);
  name_.Swap(&other->name_);
  std::swap(attr_, other->attr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateArgs_descriptor_;
  metadata.reflection = CreateArgs_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateArgs

// optional .nfs.FileHandle dirfh = 1;
bool CreateArgs::has_dirfh() const {
  return !_is_default_instance_ && dirfh_ != NULL;
}
void CreateArgs::clear_dirfh() {
  if (GetArenaNoVirtual() == NULL && dirfh_ != NULL) delete dirfh_;
  dirfh_ = NULL;
}
const ::nfs::FileHandle& CreateArgs::dirfh() const {
  // @@protoc_insertion_point(field_get:nfs.CreateArgs.dirfh)
  return dirfh_ != NULL ? *dirfh_ : *default_instance_->dirfh_;
}
::nfs::FileHandle* CreateArgs::mutable_dirfh() {
  
  if (dirfh_ == NULL) {
    dirfh_ = new ::nfs::FileHandle;
  }
  // @@protoc_insertion_point(field_mutable:nfs.CreateArgs.dirfh)
  return dirfh_;
}
::nfs::FileHandle* CreateArgs::release_dirfh() {
  // @@protoc_insertion_point(field_release:nfs.CreateArgs.dirfh)
  
  ::nfs::FileHandle* temp = dirfh_;
  dirfh_ = NULL;
  return temp;
}
void CreateArgs::set_allocated_dirfh(::nfs::FileHandle* dirfh) {
  delete dirfh_;
  dirfh_ = dirfh;
  if (dirfh) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nfs.CreateArgs.dirfh)
}

// optional string name = 2;
void CreateArgs::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CreateArgs::name() const {
  // @@protoc_insertion_point(field_get:nfs.CreateArgs.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateArgs::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfs.CreateArgs.name)
}
 void CreateArgs::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfs.CreateArgs.name)
}
 void CreateArgs::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfs.CreateArgs.name)
}
 ::std::string* CreateArgs::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:nfs.CreateArgs.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateArgs::release_name() {
  // @@protoc_insertion_point(field_release:nfs.CreateArgs.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateArgs::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:nfs.CreateArgs.name)
}

// optional .nfs.Attribute attr = 3;
bool CreateArgs::has_attr() const {
  return !_is_default_instance_ && attr_ != NULL;
}
void CreateArgs::clear_attr() {
  if (GetArenaNoVirtual() == NULL && attr_ != NULL) delete attr_;
  attr_ = NULL;
}
const ::nfs::Attribute& CreateArgs::attr() const {
  // @@protoc_insertion_point(field_get:nfs.CreateArgs.attr)
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
::nfs::Attribute* CreateArgs::mutable_attr() {
  
  if (attr_ == NULL) {
    attr_ = new ::nfs::Attribute;
  }
  // @@protoc_insertion_point(field_mutable:nfs.CreateArgs.attr)
  return attr_;
}
::nfs::Attribute* CreateArgs::release_attr() {
  // @@protoc_insertion_point(field_release:nfs.CreateArgs.attr)
  
  ::nfs::Attribute* temp = attr_;
  attr_ = NULL;
  return temp;
}
void CreateArgs::set_allocated_attr(::nfs::Attribute* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nfs.CreateArgs.attr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateReturn::kNewfhFieldNumber;
const int CreateReturn::kAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateReturn::CreateReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfs.CreateReturn)
}

void CreateReturn::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  newfh_ = const_cast< ::nfs::FileHandle*>(&::nfs::FileHandle::default_instance());
  attr_ = const_cast< ::nfs::Attribute*>(&::nfs::Attribute::default_instance());
}

CreateReturn::CreateReturn(const CreateReturn& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfs.CreateReturn)
}

void CreateReturn::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  newfh_ = NULL;
  attr_ = NULL;
}

CreateReturn::~CreateReturn() {
  // @@protoc_insertion_point(destructor:nfs.CreateReturn)
  SharedDtor();
}

void CreateReturn::SharedDtor() {
  if (this != default_instance_) {
    delete newfh_;
    delete attr_;
  }
}

void CreateReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateReturn_descriptor_;
}

const CreateReturn& CreateReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfs_2eproto();
  return *default_instance_;
}

CreateReturn* CreateReturn::default_instance_ = NULL;

CreateReturn* CreateReturn::New(::google::protobuf::Arena* arena) const {
  CreateReturn* n = new CreateReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:nfs.CreateReturn)
  if (GetArenaNoVirtual() == NULL && newfh_ != NULL) delete newfh_;
  newfh_ = NULL;
  if (GetArenaNoVirtual() == NULL && attr_ != NULL) delete attr_;
  attr_ = NULL;
}

bool CreateReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfs.CreateReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .nfs.FileHandle newfh = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_newfh()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        break;
      }

      // optional .nfs.Attribute attr = 2;
      case 2: {
        if (tag == 18) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfs.CreateReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfs.CreateReturn)
  return false;
#undef DO_
}

void CreateReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfs.CreateReturn)
  // optional .nfs.FileHandle newfh = 1;
  if (this->has_newfh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->newfh_, output);
  }

  // optional .nfs.Attribute attr = 2;
  if (this->has_attr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->attr_, output);
  }

  // @@protoc_insertion_point(serialize_end:nfs.CreateReturn)
}

::google::protobuf::uint8* CreateReturn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfs.CreateReturn)
  // optional .nfs.FileHandle newfh = 1;
  if (this->has_newfh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->newfh_, false, target);
  }

  // optional .nfs.Attribute attr = 2;
  if (this->has_attr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->attr_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfs.CreateReturn)
  return target;
}

int CreateReturn::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfs.CreateReturn)
  int total_size = 0;

  // optional .nfs.FileHandle newfh = 1;
  if (this->has_newfh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->newfh_);
  }

  // optional .nfs.Attribute attr = 2;
  if (this->has_attr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->attr_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfs.CreateReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateReturn* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfs.CreateReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfs.CreateReturn)
    MergeFrom(*source);
  }
}

void CreateReturn::MergeFrom(const CreateReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfs.CreateReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_newfh()) {
    mutable_newfh()->::nfs::FileHandle::MergeFrom(from.newfh());
  }
  if (from.has_attr()) {
    mutable_attr()->::nfs::Attribute::MergeFrom(from.attr());
  }
}

void CreateReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfs.CreateReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateReturn::CopyFrom(const CreateReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfs.CreateReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateReturn::IsInitialized() const {

  return true;
}

void CreateReturn::Swap(CreateReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateReturn::InternalSwap(CreateReturn* other) {
  std::swap(newfh_, other->newfh_);
  std::swap(attr_, other->attr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateReturn_descriptor_;
  metadata.reflection = CreateReturn_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateReturn

// optional .nfs.FileHandle newfh = 1;
bool CreateReturn::has_newfh() const {
  return !_is_default_instance_ && newfh_ != NULL;
}
void CreateReturn::clear_newfh() {
  if (GetArenaNoVirtual() == NULL && newfh_ != NULL) delete newfh_;
  newfh_ = NULL;
}
const ::nfs::FileHandle& CreateReturn::newfh() const {
  // @@protoc_insertion_point(field_get:nfs.CreateReturn.newfh)
  return newfh_ != NULL ? *newfh_ : *default_instance_->newfh_;
}
::nfs::FileHandle* CreateReturn::mutable_newfh() {
  
  if (newfh_ == NULL) {
    newfh_ = new ::nfs::FileHandle;
  }
  // @@protoc_insertion_point(field_mutable:nfs.CreateReturn.newfh)
  return newfh_;
}
::nfs::FileHandle* CreateReturn::release_newfh() {
  // @@protoc_insertion_point(field_release:nfs.CreateReturn.newfh)
  
  ::nfs::FileHandle* temp = newfh_;
  newfh_ = NULL;
  return temp;
}
void CreateReturn::set_allocated_newfh(::nfs::FileHandle* newfh) {
  delete newfh_;
  newfh_ = newfh;
  if (newfh) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nfs.CreateReturn.newfh)
}

// optional .nfs.Attribute attr = 2;
bool CreateReturn::has_attr() const {
  return !_is_default_instance_ && attr_ != NULL;
}
void CreateReturn::clear_attr() {
  if (GetArenaNoVirtual() == NULL && attr_ != NULL) delete attr_;
  attr_ = NULL;
}
const ::nfs::Attribute& CreateReturn::attr() const {
  // @@protoc_insertion_point(field_get:nfs.CreateReturn.attr)
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
::nfs::Attribute* CreateReturn::mutable_attr() {
  
  if (attr_ == NULL) {
    attr_ = new ::nfs::Attribute;
  }
  // @@protoc_insertion_point(field_mutable:nfs.CreateReturn.attr)
  return attr_;
}
::nfs::Attribute* CreateReturn::release_attr() {
  // @@protoc_insertion_point(field_release:nfs.CreateReturn.attr)
  
  ::nfs::Attribute* temp = attr_;
  attr_ = NULL;
  return temp;
}
void CreateReturn::set_allocated_attr(::nfs::Attribute* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nfs.CreateReturn.attr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveArgs::kDirfhFieldNumber;
const int RemoveArgs::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveArgs::RemoveArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfs.RemoveArgs)
}

void RemoveArgs::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  dirfh_ = const_cast< ::nfs::FileHandle*>(&::nfs::FileHandle::default_instance());
}

RemoveArgs::RemoveArgs(const RemoveArgs& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfs.RemoveArgs)
}

void RemoveArgs::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dirfh_ = NULL;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RemoveArgs::~RemoveArgs() {
  // @@protoc_insertion_point(destructor:nfs.RemoveArgs)
  SharedDtor();
}

void RemoveArgs::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete dirfh_;
  }
}

void RemoveArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveArgs_descriptor_;
}

const RemoveArgs& RemoveArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfs_2eproto();
  return *default_instance_;
}

RemoveArgs* RemoveArgs::default_instance_ = NULL;

RemoveArgs* RemoveArgs::New(::google::protobuf::Arena* arena) const {
  RemoveArgs* n = new RemoveArgs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:nfs.RemoveArgs)
  if (GetArenaNoVirtual() == NULL && dirfh_ != NULL) delete dirfh_;
  dirfh_ = NULL;
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RemoveArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfs.RemoveArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .nfs.FileHandle dirfh = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dirfh()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nfs.RemoveArgs.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfs.RemoveArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfs.RemoveArgs)
  return false;
#undef DO_
}

void RemoveArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfs.RemoveArgs)
  // optional .nfs.FileHandle dirfh = 1;
  if (this->has_dirfh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->dirfh_, output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfs.RemoveArgs.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfs.RemoveArgs)
}

::google::protobuf::uint8* RemoveArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfs.RemoveArgs)
  // optional .nfs.FileHandle dirfh = 1;
  if (this->has_dirfh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->dirfh_, false, target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nfs.RemoveArgs.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfs.RemoveArgs)
  return target;
}

int RemoveArgs::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfs.RemoveArgs)
  int total_size = 0;

  // optional .nfs.FileHandle dirfh = 1;
  if (this->has_dirfh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dirfh_);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfs.RemoveArgs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RemoveArgs* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfs.RemoveArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfs.RemoveArgs)
    MergeFrom(*source);
  }
}

void RemoveArgs::MergeFrom(const RemoveArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfs.RemoveArgs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_dirfh()) {
    mutable_dirfh()->::nfs::FileHandle::MergeFrom(from.dirfh());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void RemoveArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfs.RemoveArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveArgs::CopyFrom(const RemoveArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfs.RemoveArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveArgs::IsInitialized() const {

  return true;
}

void RemoveArgs::Swap(RemoveArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveArgs::InternalSwap(RemoveArgs* other) {
  std::swap(dirfh_, other->dirfh_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveArgs_descriptor_;
  metadata.reflection = RemoveArgs_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveArgs

// optional .nfs.FileHandle dirfh = 1;
bool RemoveArgs::has_dirfh() const {
  return !_is_default_instance_ && dirfh_ != NULL;
}
void RemoveArgs::clear_dirfh() {
  if (GetArenaNoVirtual() == NULL && dirfh_ != NULL) delete dirfh_;
  dirfh_ = NULL;
}
const ::nfs::FileHandle& RemoveArgs::dirfh() const {
  // @@protoc_insertion_point(field_get:nfs.RemoveArgs.dirfh)
  return dirfh_ != NULL ? *dirfh_ : *default_instance_->dirfh_;
}
::nfs::FileHandle* RemoveArgs::mutable_dirfh() {
  
  if (dirfh_ == NULL) {
    dirfh_ = new ::nfs::FileHandle;
  }
  // @@protoc_insertion_point(field_mutable:nfs.RemoveArgs.dirfh)
  return dirfh_;
}
::nfs::FileHandle* RemoveArgs::release_dirfh() {
  // @@protoc_insertion_point(field_release:nfs.RemoveArgs.dirfh)
  
  ::nfs::FileHandle* temp = dirfh_;
  dirfh_ = NULL;
  return temp;
}
void RemoveArgs::set_allocated_dirfh(::nfs::FileHandle* dirfh) {
  delete dirfh_;
  dirfh_ = dirfh;
  if (dirfh) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nfs.RemoveArgs.dirfh)
}

// optional string name = 2;
void RemoveArgs::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RemoveArgs::name() const {
  // @@protoc_insertion_point(field_get:nfs.RemoveArgs.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RemoveArgs::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfs.RemoveArgs.name)
}
 void RemoveArgs::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfs.RemoveArgs.name)
}
 void RemoveArgs::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfs.RemoveArgs.name)
}
 ::std::string* RemoveArgs::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:nfs.RemoveArgs.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RemoveArgs::release_name() {
  // @@protoc_insertion_point(field_release:nfs.RemoveArgs.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RemoveArgs::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:nfs.RemoveArgs.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveReturn::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveReturn::RemoveReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfs.RemoveReturn)
}

void RemoveReturn::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RemoveReturn::RemoveReturn(const RemoveReturn& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfs.RemoveReturn)
}

void RemoveReturn::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
}

RemoveReturn::~RemoveReturn() {
  // @@protoc_insertion_point(destructor:nfs.RemoveReturn)
  SharedDtor();
}

void RemoveReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RemoveReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveReturn_descriptor_;
}

const RemoveReturn& RemoveReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfs_2eproto();
  return *default_instance_;
}

RemoveReturn* RemoveReturn::default_instance_ = NULL;

RemoveReturn* RemoveReturn::New(::google::protobuf::Arena* arena) const {
  RemoveReturn* n = new RemoveReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:nfs.RemoveReturn)
  status_ = 0;
}

bool RemoveReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfs.RemoveReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfs.RemoveReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfs.RemoveReturn)
  return false;
#undef DO_
}

void RemoveReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfs.RemoveReturn)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfs.RemoveReturn)
}

::google::protobuf::uint8* RemoveReturn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfs.RemoveReturn)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfs.RemoveReturn)
  return target;
}

int RemoveReturn::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfs.RemoveReturn)
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfs.RemoveReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RemoveReturn* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfs.RemoveReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfs.RemoveReturn)
    MergeFrom(*source);
  }
}

void RemoveReturn::MergeFrom(const RemoveReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfs.RemoveReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void RemoveReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfs.RemoveReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveReturn::CopyFrom(const RemoveReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfs.RemoveReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveReturn::IsInitialized() const {

  return true;
}

void RemoveReturn::Swap(RemoveReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveReturn::InternalSwap(RemoveReturn* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveReturn_descriptor_;
  metadata.reflection = RemoveReturn_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveReturn

// optional int32 status = 1;
void RemoveReturn::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 RemoveReturn::status() const {
  // @@protoc_insertion_point(field_get:nfs.RemoveReturn.status)
  return status_;
}
 void RemoveReturn::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:nfs.RemoveReturn.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadArgs::kFhFieldNumber;
const int ReadArgs::kOffsetFieldNumber;
const int ReadArgs::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadArgs::ReadArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfs.ReadArgs)
}

void ReadArgs::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  fh_ = const_cast< ::nfs::FileHandle*>(&::nfs::FileHandle::default_instance());
}

ReadArgs::ReadArgs(const ReadArgs& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfs.ReadArgs)
}

void ReadArgs::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  fh_ = NULL;
  offset_ = 0;
  count_ = 0;
}

ReadArgs::~ReadArgs() {
  // @@protoc_insertion_point(destructor:nfs.ReadArgs)
  SharedDtor();
}

void ReadArgs::SharedDtor() {
  if (this != default_instance_) {
    delete fh_;
  }
}

void ReadArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadArgs_descriptor_;
}

const ReadArgs& ReadArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfs_2eproto();
  return *default_instance_;
}

ReadArgs* ReadArgs::default_instance_ = NULL;

ReadArgs* ReadArgs::New(::google::protobuf::Arena* arena) const {
  ReadArgs* n = new ReadArgs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:nfs.ReadArgs)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ReadArgs, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReadArgs*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(offset_, count_);
  if (GetArenaNoVirtual() == NULL && fh_ != NULL) delete fh_;
  fh_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool ReadArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfs.ReadArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .nfs.FileHandle fh = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fh()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_offset;
        break;
      }

      // optional int32 offset = 2;
      case 2: {
        if (tag == 16) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_count;
        break;
      }

      // optional int32 count = 3;
      case 3: {
        if (tag == 24) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfs.ReadArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfs.ReadArgs)
  return false;
#undef DO_
}

void ReadArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfs.ReadArgs)
  // optional .nfs.FileHandle fh = 1;
  if (this->has_fh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->fh_, output);
  }

  // optional int32 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->offset(), output);
  }

  // optional int32 count = 3;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfs.ReadArgs)
}

::google::protobuf::uint8* ReadArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfs.ReadArgs)
  // optional .nfs.FileHandle fh = 1;
  if (this->has_fh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->fh_, false, target);
  }

  // optional int32 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->offset(), target);
  }

  // optional int32 count = 3;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfs.ReadArgs)
  return target;
}

int ReadArgs::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfs.ReadArgs)
  int total_size = 0;

  // optional .nfs.FileHandle fh = 1;
  if (this->has_fh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fh_);
  }

  // optional int32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  // optional int32 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfs.ReadArgs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReadArgs* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfs.ReadArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfs.ReadArgs)
    MergeFrom(*source);
  }
}

void ReadArgs::MergeFrom(const ReadArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfs.ReadArgs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_fh()) {
    mutable_fh()->::nfs::FileHandle::MergeFrom(from.fh());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void ReadArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfs.ReadArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadArgs::CopyFrom(const ReadArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfs.ReadArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadArgs::IsInitialized() const {

  return true;
}

void ReadArgs::Swap(ReadArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadArgs::InternalSwap(ReadArgs* other) {
  std::swap(fh_, other->fh_);
  std::swap(offset_, other->offset_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadArgs_descriptor_;
  metadata.reflection = ReadArgs_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadArgs

// optional .nfs.FileHandle fh = 1;
bool ReadArgs::has_fh() const {
  return !_is_default_instance_ && fh_ != NULL;
}
void ReadArgs::clear_fh() {
  if (GetArenaNoVirtual() == NULL && fh_ != NULL) delete fh_;
  fh_ = NULL;
}
const ::nfs::FileHandle& ReadArgs::fh() const {
  // @@protoc_insertion_point(field_get:nfs.ReadArgs.fh)
  return fh_ != NULL ? *fh_ : *default_instance_->fh_;
}
::nfs::FileHandle* ReadArgs::mutable_fh() {
  
  if (fh_ == NULL) {
    fh_ = new ::nfs::FileHandle;
  }
  // @@protoc_insertion_point(field_mutable:nfs.ReadArgs.fh)
  return fh_;
}
::nfs::FileHandle* ReadArgs::release_fh() {
  // @@protoc_insertion_point(field_release:nfs.ReadArgs.fh)
  
  ::nfs::FileHandle* temp = fh_;
  fh_ = NULL;
  return temp;
}
void ReadArgs::set_allocated_fh(::nfs::FileHandle* fh) {
  delete fh_;
  fh_ = fh;
  if (fh) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nfs.ReadArgs.fh)
}

// optional int32 offset = 2;
void ReadArgs::clear_offset() {
  offset_ = 0;
}
 ::google::protobuf::int32 ReadArgs::offset() const {
  // @@protoc_insertion_point(field_get:nfs.ReadArgs.offset)
  return offset_;
}
 void ReadArgs::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:nfs.ReadArgs.offset)
}

// optional int32 count = 3;
void ReadArgs::clear_count() {
  count_ = 0;
}
 ::google::protobuf::int32 ReadArgs::count() const {
  // @@protoc_insertion_point(field_get:nfs.ReadArgs.count)
  return count_;
}
 void ReadArgs::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:nfs.ReadArgs.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadReturn::kAttrFieldNumber;
const int ReadReturn::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadReturn::ReadReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfs.ReadReturn)
}

void ReadReturn::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  attr_ = const_cast< ::nfs::Attribute*>(&::nfs::Attribute::default_instance());
}

ReadReturn::ReadReturn(const ReadReturn& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfs.ReadReturn)
}

void ReadReturn::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  attr_ = NULL;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReadReturn::~ReadReturn() {
  // @@protoc_insertion_point(destructor:nfs.ReadReturn)
  SharedDtor();
}

void ReadReturn::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete attr_;
  }
}

void ReadReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadReturn_descriptor_;
}

const ReadReturn& ReadReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfs_2eproto();
  return *default_instance_;
}

ReadReturn* ReadReturn::default_instance_ = NULL;

ReadReturn* ReadReturn::New(::google::protobuf::Arena* arena) const {
  ReadReturn* n = new ReadReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:nfs.ReadReturn)
  if (GetArenaNoVirtual() == NULL && attr_ != NULL) delete attr_;
  attr_ = NULL;
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReadReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfs.ReadReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .nfs.Attribute attr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfs.ReadReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfs.ReadReturn)
  return false;
#undef DO_
}

void ReadReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfs.ReadReturn)
  // optional .nfs.Attribute attr = 1;
  if (this->has_attr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->attr_, output);
  }

  // optional bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfs.ReadReturn)
}

::google::protobuf::uint8* ReadReturn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfs.ReadReturn)
  // optional .nfs.Attribute attr = 1;
  if (this->has_attr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->attr_, false, target);
  }

  // optional bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfs.ReadReturn)
  return target;
}

int ReadReturn::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfs.ReadReturn)
  int total_size = 0;

  // optional .nfs.Attribute attr = 1;
  if (this->has_attr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->attr_);
  }

  // optional bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfs.ReadReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReadReturn* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfs.ReadReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfs.ReadReturn)
    MergeFrom(*source);
  }
}

void ReadReturn::MergeFrom(const ReadReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfs.ReadReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_attr()) {
    mutable_attr()->::nfs::Attribute::MergeFrom(from.attr());
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void ReadReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfs.ReadReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadReturn::CopyFrom(const ReadReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfs.ReadReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadReturn::IsInitialized() const {

  return true;
}

void ReadReturn::Swap(ReadReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadReturn::InternalSwap(ReadReturn* other) {
  std::swap(attr_, other->attr_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadReturn_descriptor_;
  metadata.reflection = ReadReturn_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadReturn

// optional .nfs.Attribute attr = 1;
bool ReadReturn::has_attr() const {
  return !_is_default_instance_ && attr_ != NULL;
}
void ReadReturn::clear_attr() {
  if (GetArenaNoVirtual() == NULL && attr_ != NULL) delete attr_;
  attr_ = NULL;
}
const ::nfs::Attribute& ReadReturn::attr() const {
  // @@protoc_insertion_point(field_get:nfs.ReadReturn.attr)
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
::nfs::Attribute* ReadReturn::mutable_attr() {
  
  if (attr_ == NULL) {
    attr_ = new ::nfs::Attribute;
  }
  // @@protoc_insertion_point(field_mutable:nfs.ReadReturn.attr)
  return attr_;
}
::nfs::Attribute* ReadReturn::release_attr() {
  // @@protoc_insertion_point(field_release:nfs.ReadReturn.attr)
  
  ::nfs::Attribute* temp = attr_;
  attr_ = NULL;
  return temp;
}
void ReadReturn::set_allocated_attr(::nfs::Attribute* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nfs.ReadReturn.attr)
}

// optional bytes data = 2;
void ReadReturn::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReadReturn::data() const {
  // @@protoc_insertion_point(field_get:nfs.ReadReturn.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReadReturn::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfs.ReadReturn.data)
}
 void ReadReturn::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfs.ReadReturn.data)
}
 void ReadReturn::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfs.ReadReturn.data)
}
 ::std::string* ReadReturn::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:nfs.ReadReturn.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReadReturn::release_data() {
  // @@protoc_insertion_point(field_release:nfs.ReadReturn.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReadReturn::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:nfs.ReadReturn.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteArgs::kFhFieldNumber;
const int WriteArgs::kOffsetFieldNumber;
const int WriteArgs::kCountFieldNumber;
const int WriteArgs::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteArgs::WriteArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfs.WriteArgs)
}

void WriteArgs::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  fh_ = const_cast< ::nfs::FileHandle*>(&::nfs::FileHandle::default_instance());
}

WriteArgs::WriteArgs(const WriteArgs& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfs.WriteArgs)
}

void WriteArgs::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  fh_ = NULL;
  offset_ = 0;
  count_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WriteArgs::~WriteArgs() {
  // @@protoc_insertion_point(destructor:nfs.WriteArgs)
  SharedDtor();
}

void WriteArgs::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete fh_;
  }
}

void WriteArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriteArgs_descriptor_;
}

const WriteArgs& WriteArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfs_2eproto();
  return *default_instance_;
}

WriteArgs* WriteArgs::default_instance_ = NULL;

WriteArgs* WriteArgs::New(::google::protobuf::Arena* arena) const {
  WriteArgs* n = new WriteArgs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:nfs.WriteArgs)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WriteArgs, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WriteArgs*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(offset_, count_);
  if (GetArenaNoVirtual() == NULL && fh_ != NULL) delete fh_;
  fh_ = NULL;
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool WriteArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfs.WriteArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .nfs.FileHandle fh = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fh()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_offset;
        break;
      }

      // optional int32 offset = 2;
      case 2: {
        if (tag == 16) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_count;
        break;
      }

      // optional int32 count = 3;
      case 3: {
        if (tag == 24) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_data;
        break;
      }

      // optional bytes data = 4;
      case 4: {
        if (tag == 34) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfs.WriteArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfs.WriteArgs)
  return false;
#undef DO_
}

void WriteArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfs.WriteArgs)
  // optional .nfs.FileHandle fh = 1;
  if (this->has_fh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->fh_, output);
  }

  // optional int32 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->offset(), output);
  }

  // optional int32 count = 3;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  // optional bytes data = 4;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:nfs.WriteArgs)
}

::google::protobuf::uint8* WriteArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfs.WriteArgs)
  // optional .nfs.FileHandle fh = 1;
  if (this->has_fh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->fh_, false, target);
  }

  // optional int32 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->offset(), target);
  }

  // optional int32 count = 3;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  // optional bytes data = 4;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfs.WriteArgs)
  return target;
}

int WriteArgs::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfs.WriteArgs)
  int total_size = 0;

  // optional .nfs.FileHandle fh = 1;
  if (this->has_fh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fh_);
  }

  // optional int32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  // optional int32 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  // optional bytes data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfs.WriteArgs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WriteArgs* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfs.WriteArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfs.WriteArgs)
    MergeFrom(*source);
  }
}

void WriteArgs::MergeFrom(const WriteArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfs.WriteArgs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_fh()) {
    mutable_fh()->::nfs::FileHandle::MergeFrom(from.fh());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void WriteArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfs.WriteArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteArgs::CopyFrom(const WriteArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfs.WriteArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteArgs::IsInitialized() const {

  return true;
}

void WriteArgs::Swap(WriteArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteArgs::InternalSwap(WriteArgs* other) {
  std::swap(fh_, other->fh_);
  std::swap(offset_, other->offset_);
  std::swap(count_, other->count_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriteArgs_descriptor_;
  metadata.reflection = WriteArgs_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteArgs

// optional .nfs.FileHandle fh = 1;
bool WriteArgs::has_fh() const {
  return !_is_default_instance_ && fh_ != NULL;
}
void WriteArgs::clear_fh() {
  if (GetArenaNoVirtual() == NULL && fh_ != NULL) delete fh_;
  fh_ = NULL;
}
const ::nfs::FileHandle& WriteArgs::fh() const {
  // @@protoc_insertion_point(field_get:nfs.WriteArgs.fh)
  return fh_ != NULL ? *fh_ : *default_instance_->fh_;
}
::nfs::FileHandle* WriteArgs::mutable_fh() {
  
  if (fh_ == NULL) {
    fh_ = new ::nfs::FileHandle;
  }
  // @@protoc_insertion_point(field_mutable:nfs.WriteArgs.fh)
  return fh_;
}
::nfs::FileHandle* WriteArgs::release_fh() {
  // @@protoc_insertion_point(field_release:nfs.WriteArgs.fh)
  
  ::nfs::FileHandle* temp = fh_;
  fh_ = NULL;
  return temp;
}
void WriteArgs::set_allocated_fh(::nfs::FileHandle* fh) {
  delete fh_;
  fh_ = fh;
  if (fh) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nfs.WriteArgs.fh)
}

// optional int32 offset = 2;
void WriteArgs::clear_offset() {
  offset_ = 0;
}
 ::google::protobuf::int32 WriteArgs::offset() const {
  // @@protoc_insertion_point(field_get:nfs.WriteArgs.offset)
  return offset_;
}
 void WriteArgs::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:nfs.WriteArgs.offset)
}

// optional int32 count = 3;
void WriteArgs::clear_count() {
  count_ = 0;
}
 ::google::protobuf::int32 WriteArgs::count() const {
  // @@protoc_insertion_point(field_get:nfs.WriteArgs.count)
  return count_;
}
 void WriteArgs::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:nfs.WriteArgs.count)
}

// optional bytes data = 4;
void WriteArgs::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WriteArgs::data() const {
  // @@protoc_insertion_point(field_get:nfs.WriteArgs.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WriteArgs::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfs.WriteArgs.data)
}
 void WriteArgs::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfs.WriteArgs.data)
}
 void WriteArgs::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfs.WriteArgs.data)
}
 ::std::string* WriteArgs::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:nfs.WriteArgs.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WriteArgs::release_data() {
  // @@protoc_insertion_point(field_release:nfs.WriteArgs.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WriteArgs::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:nfs.WriteArgs.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteReturn::kAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteReturn::WriteReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nfs.WriteReturn)
}

void WriteReturn::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  attr_ = const_cast< ::nfs::Attribute*>(&::nfs::Attribute::default_instance());
}

WriteReturn::WriteReturn(const WriteReturn& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:nfs.WriteReturn)
}

void WriteReturn::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  attr_ = NULL;
}

WriteReturn::~WriteReturn() {
  // @@protoc_insertion_point(destructor:nfs.WriteReturn)
  SharedDtor();
}

void WriteReturn::SharedDtor() {
  if (this != default_instance_) {
    delete attr_;
  }
}

void WriteReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriteReturn_descriptor_;
}

const WriteReturn& WriteReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nfs_2eproto();
  return *default_instance_;
}

WriteReturn* WriteReturn::default_instance_ = NULL;

WriteReturn* WriteReturn::New(::google::protobuf::Arena* arena) const {
  WriteReturn* n = new WriteReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:nfs.WriteReturn)
  if (GetArenaNoVirtual() == NULL && attr_ != NULL) delete attr_;
  attr_ = NULL;
}

bool WriteReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nfs.WriteReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .nfs.Attribute attr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nfs.WriteReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nfs.WriteReturn)
  return false;
#undef DO_
}

void WriteReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nfs.WriteReturn)
  // optional .nfs.Attribute attr = 1;
  if (this->has_attr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->attr_, output);
  }

  // @@protoc_insertion_point(serialize_end:nfs.WriteReturn)
}

::google::protobuf::uint8* WriteReturn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:nfs.WriteReturn)
  // optional .nfs.Attribute attr = 1;
  if (this->has_attr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->attr_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nfs.WriteReturn)
  return target;
}

int WriteReturn::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:nfs.WriteReturn)
  int total_size = 0;

  // optional .nfs.Attribute attr = 1;
  if (this->has_attr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->attr_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nfs.WriteReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WriteReturn* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nfs.WriteReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nfs.WriteReturn)
    MergeFrom(*source);
  }
}

void WriteReturn::MergeFrom(const WriteReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nfs.WriteReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_attr()) {
    mutable_attr()->::nfs::Attribute::MergeFrom(from.attr());
  }
}

void WriteReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nfs.WriteReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteReturn::CopyFrom(const WriteReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nfs.WriteReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteReturn::IsInitialized() const {

  return true;
}

void WriteReturn::Swap(WriteReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteReturn::InternalSwap(WriteReturn* other) {
  std::swap(attr_, other->attr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriteReturn_descriptor_;
  metadata.reflection = WriteReturn_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteReturn

// optional .nfs.Attribute attr = 1;
bool WriteReturn::has_attr() const {
  return !_is_default_instance_ && attr_ != NULL;
}
void WriteReturn::clear_attr() {
  if (GetArenaNoVirtual() == NULL && attr_ != NULL) delete attr_;
  attr_ = NULL;
}
const ::nfs::Attribute& WriteReturn::attr() const {
  // @@protoc_insertion_point(field_get:nfs.WriteReturn.attr)
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
::nfs::Attribute* WriteReturn::mutable_attr() {
  
  if (attr_ == NULL) {
    attr_ = new ::nfs::Attribute;
  }
  // @@protoc_insertion_point(field_mutable:nfs.WriteReturn.attr)
  return attr_;
}
::nfs::Attribute* WriteReturn::release_attr() {
  // @@protoc_insertion_point(field_release:nfs.WriteReturn.attr)
  
  ::nfs::Attribute* temp = attr_;
  attr_ = NULL;
  return temp;
}
void WriteReturn::set_allocated_attr(::nfs::Attribute* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nfs.WriteReturn.attr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace nfs

// @@protoc_insertion_point(global_scope)
